{
  // フォントファミリー
  // コードの一行が長くなるための可読性向上
  "editor.wordWrap": "on",
  // tab キーを押すとスペースが挿入されます。
  "editor.insertSpaces": true,
  // エディターで空白文字を表示する方法を制御します。'none'、'boundary' および 'all' が使用可能です。'boundary' オプションでは、単語間の単一スペースは表示されません。
  "editor.renderWhitespace": "none",
  // 有効な場合、ファイルを開くときに文字セット エンコードを推測します。言語ごとに構成することも可能
  "files.autoGuessEncoding": true,
  // 拡張子とファイルの関連付け
  "files.associations": {
    "*.sql": "sql",
    "*.vue": "vue"
  },
  "breadcrumbs.enabled": true,
  // 有効にすると、ファイルの保存時に最終行以降の新しい行をトリミングします。
  "files.trimFinalNewlines": false,
  // エディターのラベルの書式を制御します。例としてこの設定を変更することでファイルの場所を理解しやすくなります:
  // - short: 'parent'
  // - medium: 'workspace/src/parent'
  // - long: '/home/user/workspace/src/parent'
  // - default: '.../parent', 　別タブで、同じタイトルを共有する場合や、相対的なワークスペース パス タブが無効になっている場合
  "workbench.editor.labelFormat": "short",
  // 任意の表示グループが開かれた場合に、そこにエディターを表示するかどうかを制御します。無効にした場合、エディターは現在のアクティブなエディター グループに優先して開かれます。有効にした場合は、現在のアクティブなエディター グループにもう一度開くのではなく、既に開いているエディターが表示されます。特定のグループ内や現在アクティブなグループの横に強制的にエディターを開いた場合などに、この設定が無視される場合もあることにご注意ください。
  "workbench.editor.revealIfOpen": false,
  // 開いているエディターをアイコンで表示するかどうかを制御します。これには、アイコンのテーマを有効にする必要もあります。
  "workbench.editor.showIcons": false,
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  // todo エディターグループにアクティブなエディターが一つしか存在できない
  // 前のセッションからエディターが復元されていない場合に、起動時に表示するかどうかを制御します。'none' を選択するとエディターなしで開始します。'welcomepage' を選択するとウェルカム ページを開きます (既定)。'newuntitledfile' を選択すると新しい無題のファイルを開きます (空のワークスペースを開いているときのみ)。
  "workbench.startupEditor": "none",
  // エディターを開く場所を制御します。'left' または 'right' を選択すると現在アクティブになっているエディターの左または右にエディターを開きます。'first' または 'last' を選択すると現在アクティブになっているエディターとは別個にエディターを開きます。
  "workbench.editor.openPositioning": "first",
  // [開いているエディター] ウィンドウに表示するエディターの数。
  "explorer.openEditors.visible": 0,
  // デバッグ中にエディターの行内に変数値を表示します
  "debug.inlineValues": true,
  // ユニバーサル セレクター (*) を使用すると処理速度が低下することが分かっています
  "css.lint.universalSelector": "warning",
  "files.maxMemoryForLargeFilesMB": 16384,

  //////////////////////////////////// third party
  // emmet
  // htmlで有効にします
  "emmet.triggerExpansionOnTab": true,
  "emmet.showSuggestionsAsSnippets": true,
  // Emmet などのスニペット候補を優先して表示
  "editor.snippetSuggestions": "top",
  "emmet.variables": { "lang": "ja" },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact",
    "vue-html": "html"
  },
  "emmet.syntaxProfiles": {
    "jsx": {
      "self_closing_tag": true
    }
  },
  // vimの設定
  "vim.leader": "<space>",
  // 行頭、行末を移動できるようにする
  "vim.whichwrap": "h,l,<,>,[,]",
  // systemのclipboardを使用します
  "vim.useSystemClipboard": true,
  // hlsearchは必要だと思う
  "vim.hlsearch": true,
  // wordを* or + で検索するでしょ?
  "vim.visualstar": true,
  "vim.useCtrlKeys": true,
  // ignore case in search patterns.
  "vim.ignorecase": true,
  // show where a / search matches as you type it.
  "vim.incsearch": true,
  // enable the sneak plugin for vim.
  "vim.sneak": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // {
    //     // 行を結合した際のスペースを削除
    //     "before": ["J"],
    //     "after": ["J", "x"]
    // },
    {
      // カーソル下の単語を検索(前を検索)のキーバインドを"#"から"("へ
      "before": ["("],
      "after": ["#"]
    },
    {
      // v一回でカーソル下の一文字選択(g,Gに意味はない)
      "before": ["v"],
      "after": ["v", "g", "G"]
    },
    {
      // shift + gで末尾の行末まで
      "before": ["G"],
      "after": ["G", "$"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "'"],
      "after": ["v", "i", "w", "S", "'"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "\""],
      "after": ["v", "i", "w", "S", "\""]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "`"],
      "after": ["v", "i", "w", "S", "`"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "{"],
      "after": ["v", "i", "w", "S", "}"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "}"],
      "after": ["v", "i", "w", "S", "}"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "["],
      "after": ["v", "i", "w", "S", "]"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "]"],
      "after": ["v", "i", "w", "S", "]"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "*"],
      "after": ["v", "i", "w", "S", "*"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "("],
      "after": ["v", "i", "w", "S", ")"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", ")"],
      "after": ["v", "i", "w", "S", ")"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", "<"],
      "after": ["v", "i", "w", "S", ">"]
    },
    {
      // カーソル下の単語を押したキーで囲む
      "before": ["leader", ">"],
      "after": ["v", "i", "w", "S", ">"]
    },
    {
      // カーソルから行末までを選択（末尾の改行含まない ）
      "before": ["V"],
      "after": ["v", "$", "h"]
    },
    {
      // カーソル行を選択（末尾の改行含まない ）
      "before": ["leader", "v"],
      "after": ["^", "v", "$", "h"]
    },
    {
      // カーソルから行末までをコピー（末尾の改行含まない ）
      "before": ["Y"],
      "after": ["v", "$", "h", "y"]
    },
    {
      // カーソル行をコピー（末尾の改行含まない ）
      "before": ["leader", "y"],
      "after": ["^", "v", "$", "h", "y"]
    },
    {
      // ':'のコマンドモードをアンバインド
      "before": ["?"],
      "after": ["<Nop>"]
    },
    {
      // ':'のコマンドモードをアンバインド
      "before": ["/"],
      "after": ["<Nop>"]
    },
    {
      // ':'のコマンドモードをアンバインド
      "before": [":"],
      "after": ["<Nop>"]
      // "commands": [
      //   {
      //     "command": "workbench.action.showCommands"
      //   }
      // ]
    },
    {
      // エスケープ
      "before": ["ctrl ", "j"],
      "after": ["Esc", "Esc"]
    },
    {
      // Esc　は連打
      "before": ["Esc"],
      "after": ["Esc", "Esc"]
    },
    {
      // ctrl+[　は連打
      "before": ["ctrl+["],
      "after": ["ctrl+[", "ctrl+["]
    },
    {
      // easymotion発動
      "before": ["f"],
      "after": ["leader", "leader", "s"]
    },
    // jはgj
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    // kはgk
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    // ｓを実装
    {
      "before": ["s"],
      "after": ["v", "c"]
    },
    // 全選択
    {
      "before": ["leader", "a"],
      "after": ["g", "g", "v", "G", "$"]
    },
    // 全選択=>フォーマット
    {
      "before": ["leader", "="],
      "after": ["g", "g", "v", "G", "$", "="]
    },
    // VSCode本体のUndo/Redoを呼ぶように
    {
      "before": ["u"],
      "after": [],
      "commands": [
        {
          "command": "undo"
        }
      ]
    },
    {
      "before": ["ctrl+r"],
      "after": [],
      "commands": [
        {
          "command": "redo"
        }
      ]
    },
    // ctrl+fはVSCodeの検索
    {
      "before": ["ctrl+f"],
      "after": [],
      "commands": [
        {
          "command": "actions.find"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // shift + gで末尾の行末まで
    {
      "before": ["G"],
      "after": ["G", "$"]
    },
    // エスケープ
    {
      "before": ["leader", "j"],
      "after": ["<Esc>"]
    },
    // ｓを実装
    {
      "before": ["s"],
      "after": ["c"]
    },
    // jはgj
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    // kはgk
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    // オーバーライドせずに貼り付ける
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    },
    // 全選択
    {
      "before": ["leader", "a"],
      "after": ["g", "g", "v", "G", "$"]
    },
    // 全選択=>フォーマット
    {
      "before": ["leader", "="],
      "after": ["g", "g", "v", "G", "$", "="]
    },
    // VSCode本体のUndo/Redoを呼ぶように変
    {
      "before": ["u"],
      "after": [],
      "commands": [
        {
          "command": "undo"
        }
      ]
    },
    {
      "before": ["ctrl+r"],
      "after": [],
      "commands": [
        {
          "command": "redo"
        }
      ]
    }
  ],
  "vim.insertModeKeyBindings": [
    // ctrl+fはVSCodeの検索
    {
      "before": ["ctrl+f"],
      "after": [],
      "commands": [
        {
          "command": "actions.find"
        }
      ]
    },
    // スペース2回入力後のエスケープを期待通りの挙動に修正
    {
      "before": [" ", "leader", "j"],
      "after": [" ", "Esc"]
    },
    // スペース入力後のエスケープを期待通りの挙動に修正
    {
      "before": [" ", " ", "leader", "j"],
      "after": [" ", " ", "Esc"]
    },
    {
      "before": ["leader", "j"],
      "after": ["Esc", "Esc"]
    }
  ],
  "vim.easymotion": true,
  "vim.easymotionKeys": "sdfghjkl",
  "vim.easymotionMarkerForegroundColorTwoChar": "#ff0088",
  "vim.easymotionMarkerForegroundColorOneChar": "#ff0088",
  "vim.easymotionMarkerBackgroundColor": "#111",
  // 保存時に自動整形
  "editor.formatOnSave": true,
  // 既定の JSON フォーマッタを有効/無効にします
  "json.format.enable": false,
  // ターミナルの設定
  // 設定した場合、ターミナルで選択しているテキストはクリップボードにコピーされます。
  "terminal.integrated.copyOnSelection": true,
  //terminalでも使用可能になるaction
  "terminal.integrated.commandsToSkipShell": [
    "editor.action.toggleTabFocusMode",
    "workbench.action.debug.continue",
    "workbench.action.debug.pause",
    "workbench.action.debug.restart",
    "workbench.action.debug.run",
    "workbench.action.debug.start",
    "workbench.action.debug.stepInto",
    "workbench.action.debug.stepOut",
    "workbench.action.debug.stepOver",
    "workbench.action.debug.stop",
    "workbench.action.firstEditorInGroup",
    "workbench.action.focusActiveEditorGroup",
    "workbench.action.focusEighthEditorGroup",
    "workbench.action.focusFifthEditorGroup",
    "workbench.action.focusFirstEditorGroup",
    "workbench.action.focusFourthEditorGroup",
    "workbench.action.focusLastEditorGroup",
    "workbench.action.focusSecondEditorGroup",
    "workbench.action.focusSeventhEditorGroup",
    "workbench.action.focusSixthEditorGroup",
    "workbench.action.focusThirdEditorGroup",
    "workbench.action.lastEditorInGroup",
    "workbench.action.navigateDown",
    "workbench.action.navigateLeft",
    "workbench.action.navigateRight",
    "workbench.action.navigateUp",
    "workbench.action.openNextRecentlyUsedEditorInGroup",
    "workbench.action.openPreviousRecentlyUsedEditorInGroup",
    "workbench.action.quickOpen",
    "workbench.action.quickOpenPreviousEditor",
    "workbench.action.quickOpenView",
    "workbench.action.showCommands",
    "workbench.action.tasks.build",
    "workbench.action.tasks.restartTask",
    "workbench.action.tasks.runTask",
    "workbench.action.tasks.showLog",
    "workbench.action.tasks.showTasks",
    "workbench.action.tasks.terminate",
    "workbench.action.tasks.test",
    "workbench.action.terminal.clear",
    "workbench.action.terminal.clearSelection",
    "workbench.action.terminal.copySelection",
    "workbench.action.terminal.deleteWordLeft",
    "workbench.action.terminal.deleteWordRight",
    "workbench.action.terminal.focus",
    "workbench.action.terminal.focusAtIndex1",
    "workbench.action.terminal.focusAtIndex2",
    "workbench.action.terminal.focusAtIndex3",
    "workbench.action.terminal.focusAtIndex4",
    "workbench.action.terminal.focusAtIndex5",
    "workbench.action.terminal.focusAtIndex6",
    "workbench.action.terminal.focusAtIndex7",
    "workbench.action.terminal.focusAtIndex8",
    "workbench.action.terminal.focusAtIndex9",
    "workbench.action.terminal.focusFindWidget",
    "workbench.action.terminal.focusNext",
    "workbench.action.terminal.focusNextPane",
    "workbench.action.terminal.focusPrevious",
    "workbench.action.terminal.focusPreviousPane",
    "workbench.action.terminal.hideFindWidget",
    "workbench.action.terminal.kill",
    "workbench.action.terminal.moveToLineEnd",
    "workbench.action.terminal.moveToLineStart",
    "workbench.action.terminal.new",
    "workbench.action.terminal.newInActiveWorkspace",
    "workbench.action.terminal.paste",
    "workbench.action.terminal.resizePaneDown",
    "workbench.action.terminal.resizePaneLeft",
    "workbench.action.terminal.resizePaneRight",
    "workbench.action.terminal.resizePaneUp",
    "workbench.action.terminal.runActiveFile",
    "workbench.action.terminal.runSelectedText",
    "workbench.action.terminal.scrollDown",
    "workbench.action.terminal.scrollDownPage",
    "workbench.action.terminal.scrollToBottom",
    "workbench.action.terminal.scrollToNextCommand",
    "workbench.action.terminal.scrollToPreviousCommand",
    "workbench.action.terminal.scrollToTop",
    "workbench.action.terminal.scrollUp",
    "workbench.action.terminal.scrollUpPage",
    "workbench.action.terminal.selectAll",
    "workbench.action.terminal.selectToNextCommand",
    "workbench.action.terminal.selectToNextLine",
    "workbench.action.terminal.selectToPreviousCommand",
    "workbench.action.terminal.selectToPreviousLine",
    "workbench.action.terminal.split",
    "workbench.action.terminal.splitInActiveWorkspace",
    "workbench.action.terminal.toggleTerminal",
    "workbench.action.togglePanel"
  ],
  "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
  "liveServer.settings.donotShowInfoMsg": true,
  "sync.gist": "3796fc931b8e5fed5c563fe1744d088f",
  "editor.minimap.showSlider": "always",
  "prettier.printWidth": 200,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontFamily": "Myrica M",
  "terminal.integrated.fontSize": 12,
  "editor.minimap.maxColumn": 30,
  "editor.cursorWidth": 2,
  "emmet.optimizeStylesheetParsing": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "prettier.singleQuote": true,
  "javascript.format.enable": false,
  "typescript.format.enable": false,
  "explorer.confirmDelete": false,
  "prettier.arrowParens": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "jest.restartJestOnSnapshotUpdate": true,
  "terminal.integrated.splitCwd": "initial",
  "jest.debugMode": true,
  "editor.suggest.maxVisibleSuggestions": 15,
  "editor.suggest.shareSuggestSelections": true,
  "editor.parameterHints.cycle": true,
  "sync.forceUpload": true,
  "terminal.integrated.shell.osx": "/bin/zsh",
  "files.autoSave": "afterDelay",
  "editor.renderControlCharacters": true,
  "remote.containers.defaultExtensions": [
    "esbenp.prettier-vscode",
    "ionutvmi.path-autocomplete",
    "mosapride.zenkaku",
    "MS-CEINTL.vscode-language-pack-ja",
    "neptunedesign.vs-sequential-number",
    "oderwat.indent-rainbow",
    "oderwat.indent-rainbow",
    "ryu1kn.partial-diff",
    "VisualStudioExptTeam.vscodeintellicode",
    "vscode-icons-team.vscode-icons"
  ],
  "terminal.integrated.rendererType": "dom",
  "partialDiff.enableTelemetry": false,
  "editor.suggestSelection": "first",
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#dd0531"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#61dafb"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Svelte Orange",
      "value": "#ff3d00"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    }
  ],
  "files.watcherExclude": {
    "**/__pycache__/**": true,
    "**/.history/**": true,
    "**/.venv/**": true,
    ".venv/": true,
    "**/node_modules/**": true,
    // add
    "**/.git/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/Library/**": true,
    "**/GoogleDrive/**": true,
    "**/Dropbox/**": true
  },
  "files.exclude": {
    "**/__pycache__/**": true,
    // "**/.history/**": true,
    // "**/.venv/**": true,
    // "**/node_modules/**": true,
    "**/.git/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true
    // "**/.DS_STORE": true
  },
  "search.exclude": {
    "**/__pycache__/**": true,
    "**/.history/**": true,
    "**/.venv/**": true,
    "**/node_modules/**": true,
    "**/.git/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true
  },
  "workbench.iconTheme": "vscode-icons",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.closeEmptyGroups": false,
  "editor.suggestFontSize": 12,
  "markdown.preview.fontSize": 12,
  "mssql.resultsFontSize": 12,
  "rest-client.fontSize": 12,
  "sql-formatter.dialect": "pl/sql",
  "[sql]": {
    // "editor.defaultFormatter": "nmrmsys.vscode-sql-formatter-mod"
    // "editor.defaultFormatter": "lea21st.vscode-sql-formatter"
    // "editor.defaultFormatter": "Glavin001.unibeautify-vscode"
    "editor.defaultFormatter": "cweijan.vscode-database-client2"
  },
  "sql-formatter.uppercase": true,
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "remote.SSH.configFile": "/Users/naokikomiya/.ssh/config",
  "mssql.connections": [
    {
      "server": "{{put-server-name-here}}",
      "database": "{{put-database-name-here}}",
      "user": "{{put-username-here}}",
      "password": ""
    },
    {
      "server": "pp-net-db.database.windows.net",
      "database": "pp-net-sv",
      "authenticationType": "SqlLogin",
      "user": "ppnetadmin",
      "password": "",
      "emptyPasswordInput": false,
      "savePassword": true,
      "profileName": "pp-net-sv"
    }
  ],
  "[html]": {
    // "html.format.enable": false,
    // "editor.defaultFormatter": "vscode.html-language-features"
    "unibeautify.defaultConfig": "~/.unibeautifyrc.yml",
    "editor.defaultFormatter": "Glavin001.unibeautify-vscode"
  },
  // 直前に改行を1つ入れるタグの、コンマで区切られたリストです。'null'は、既定値の"head, body, /html" を表します。
  "html.format.extraLiners": "head, body, /html",
  // 要素の前にある既存の改行を保持するかどうか。要素の前でのみ機能し、タグの内側やテキストに対しては機能しません。
  "html.format.preserveNewLines": false,
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.format.enable": true,
  "eslint.autoFixOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "prettier.disableLanguages": ["html"],
  "prettier.tabWidth": 2,
  "files.autoSaveDelay": 50,
  "workbench.statusBar.visible": true,
  "debug.toolBarLocation": "docked",
  "launch": {
    "configurations": [],
    "compounds": []
  },
  "plantuml.commandArgs": ["-Xmx2g", "-DPLANTUML_LIMIT_SIZE=16384"],
  "plantuml.render": "Local",
  "pythonPreview.maxExecutedLines": 2000,
  "plantuml.exportOutDir": "./",
  "plantuml.exportSubFolder": false,
  "vim.debug.silent": true,
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "jupyter.askForKernelRestart": false,
  "jupyter.textOutputLimit": 50000,
  "jupyter.alwaysTrustNotebooks": true,
  "jupyter.searchForJupyter": false,
  "markdown.extension.print.absoluteImgPath": false,
  "markdown.extension.toc.unorderedList.marker": "*",
  "markdown.extension.print.theme": "dark",
  "[markdown]": {
    "editor.defaultFormatter": "Glavin001.unibeautify-vscode",
    "editor.tabSize": 2
  },
  "remark.format": {
    "rules": {
      "bullet": "*",
      "listItemIndent": 1,
      "fences": true
    }
  },
  "markdown-preview-enhanced.mermaidTheme": "forest",
  "markdown-preview-enhanced.previewTheme": "solarized-light.css",
  "markdown-preview-enhanced.revealjsTheme": "solarized.css",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "html.format.contentUnformatted": "",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.editor.untitled.hint": "hidden",
  "python.showStartPage": false,
  "json.schemas": [],
  "auto-rename-tag.activationOnLanguage": ["html", "xml", "php", "javascript", "javascriptreact", "typescript", "typescriptreact"],
  "diffEditor.ignoreTrimWhitespace": false,
  "html.autoClosingTags": false,
  "typescript.autoClosingTags": false,
  "javascript.autoClosingTags": false,
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": ["document"],
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.colorCustomizations": {
    "editorGroup.border": "#777",
    "editorGroupHeader.tabsBorder": "#777",
    "editorGroupHeader.tabsBackground": "#777",
    "editorOverviewRuler.border": "#777",
    // "editorError.border": "#777",
    // "editorWarning.border": "#777",
    "editor.lineHighlightBorder": "#777",
    "editorSuggestWidget.border": "#777",
    "editorHoverWidget.border": "#777",
    "tab.border": "#777",
    "tab.activeBorder": "#e964b1",
    "tab.activeBorderTop": "#e964b1",
    "tab.activeForeground": "#e964b1",
    "panel.border": "#777",
    "statusBar.border": "#777",
    "statusBar.debuggingBorder": "#777",
    "debugExceptionWidget.border": "#777",
    "activityBar.border": "#777",
    "contrastBorder": "#777",
    "contrastActiveBorder": "#777",
    "focusBorder": "#777",
    "dropdown.border": "#777",
    // "inputOption.activeBorder": "#777",
    // "inputValidation.infoBorder": "#777",
    "terminal.selectionBackground": "#e964b1"
  },
  "terminal.integrated.tabs.enabled": true,
  "yaml.format.enable": true,
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "keep",
    "gitlens.codeLens.scopes": ["document"],
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  // AWS CloudFormationリソース仕様のアジアパシフィック (東京)をYAMLスキーマとして登録
  // *.cfn.yml or *.cfn.yaml または cloud*formation/ ディレクトリ以下の.yaml or .ymlファイルの場合に適用するという風に設定
  "yaml.schemas": {
    "https://d33vqc0rt9ld30.cloudfront.net/latest/gzip/CloudFormationResourceSpecification.json": ["*.cfn.yaml", "*.cfn.yml", "cloud*formation/*.yaml", "cloud*formation/*.yml"]
  },
  // CloudFormationで使えるカスタムダグを追加
  "yaml.customTags": [
    "!Ref",
    "!Sub scalar",
    "!Sub sequence",
    "!Join sequence",
    "!FindInMap sequence",
    "!GetAtt scalar",
    "!GetAtt sequence",
    "!Base64 mapping",
    "!GetAZs",
    "!Select scalar",
    "!Select sequence",
    "!Split sequence",
    "!ImportValue",
    "!Condition",
    "!Equals sequence",
    "!And",
    "!If",
    "!Not",
    "!Or"
  ],
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "python.defaultInterpreterPath": "/usr/bin/python",
  "editor.fontLigatures": null,
  "terminal.integrated.inheritEnv": false,
  "markdown.extension.toc.levels": "1..2",
  "tabnine.experimentalAutoImports": true,
  "security.workspace.trust.untrustedFiles": "open",
  "database-client.preferConnectionName": true,
  "typescript.tsserver.maxTsServerMemory": 16384,
  "vsicons.dontShowNewVersionMessage": true,
  "notebook.output.textLineLimit": 200,
  "window.zoomLevel": 1,
  "editor.largeFileOptimizations": false,
  "remote.containers.cacheVolume": false
}
